---
# https://github.com/clong/DetectionLab/blob/master/Vagrant/scripts/install-microsoft-ata.ps1

- name: Microsoft ATA | Download
  win_get_url:
    url: http://download.microsoft.com/download/4/9/1/491394D1-3F28-4261-ABC6-C836A301290E/ATA1.9.iso
    dest: 'c:\tmp\Microsoft ATA 1.9.iso'
    checksum: DC1070A9E8F84E75198A920A2E00DDC3CA8D12745AF64F6B161892D9F3975857
    checksum_algorithm: sha256

- name: Microsoft ATA | Check for presence
  win_stat:
    path: 'C:\Program Files\Microsoft Advanced Threat Analytics\Center'
  register: ata

- block:
    - name: Ensure an ISO is mounted
      win_disk_image:
        image_path: 'c:\tmp\Microsoft ATA 1.9.iso'
        state: present
      register: disk_image_out

    - name: Run installer from mounted ISO
      win_package:
        path: '{{ disk_image_out.mount_paths[0] }}Microsoft ATA Center Setup.exe'
        arguments: /q --LicenseAccepted NetFrameworkCommandLineArguments=`"/q`" --EnableMicrosoftUpdate
        product_id: 61DB68F8-F10C-44F0-BFD5-92A0C12D728F
        state: present

    - name: Unmount ISO
      win_disk_image:
        image_path: 'c:\tmp\Microsoft ATA 1.9.iso'
        state: absent
  when: not ata.stat.exists

- name: Microsoft ATA | Get DetectionLab config
  win_shell: "Get-Content {{ detectionlab_gitroot }}\\vagrant\\resources\\microsoft_ata\\microsoft-ata-config.json"
  register: atacfg
  changed_when: false

- name: Get WEF certificate
  win_shell: |
    $req = [System.Net.WebRequest]::CreateHttp("https://wef")
    try { $req.GetResponse() } catch { }
    $ThumbPrint = $req.ServicePoint.Certificate.GetCertHashString()
    echo $ThumbPrint
  run_once: true
  register: https_wef
  ignore_errors: true
  changed_when: false

# Need to recover Certificate HashString
- debug: var=https_wef

- name: Register host
  win_uri:
    url: https://localhost/api/management/systemProfiles/center
    method: POST
    content_type: "application/json"
    body: "{{ atacfg | replace('{{THUMBPRINT}}', https_wef.stdout_lines) }}"
    url_username: "{{ wef_user | default(_wef_user) }}"
    url_password: "{{ wef_userpass | default(_wef_userpass) }}"
    validate_certs: false
  # FIXME!
  ignore_errors: true

# FIXME! not compatible if strategy: free. handlers?
# https://github.com/ansible/ansible/issues/31504
#- name: pause
#  pause:
#    seconds: 60

- include: microsoft-ata-dc.yml
  when: wef_atalight_target_enable|bool and detectionlab_online
